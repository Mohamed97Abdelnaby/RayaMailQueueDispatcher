<Activity mc:Ignorable="sap sap2010" x:Class="EgyptianIDValidation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_BE" Type="OutArgument(ui:BusinessRuleException)" />
    <x:Property Name="out_SE" Type="OutArgument(s:Exception)" />
    <x:Property Name="in_DownPaymet" Type="InArgument(x:String)" />
    <x:Property Name="in_CarPrice" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1240,515</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Validate DownPayment and CarPrice&#xA;- Are not empties&#xA;- Both are numirc&#xA;- Car Price Should Be &gt;= DownPayment" DisplayName="Validate DownPayment and CarPrice" sap:VirtualizedContainerService.HintSize="450,348" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="#region Main&#xA;&#xA;try&#xA;{&#xA;&#x9;&#x9;#region Init&#xA;List&lt;string&gt; ListOfErrors = new List&lt;string&gt;();&#xA;#endregion&#xA;&#xA;#region Functions&#xA;&#xA;#endregion&#xA;&#xA;&#x9;#region Logic&#xA;&#xA;   if(string.IsNullOrEmpty(CarPrice))&#xA;   {&#xA;   &#x9;ListOfErrors.Add(&quot;Empty Car Price!&quot;);&#xA;   }&#xA;    if(string.IsNullOrEmpty(DownPayment))&#xA;   {&#xA;   &#x9;ListOfErrors.Add(&quot;Empty Down Payment!&quot;);&#xA;   }&#xA;   if(!CarPrice.IsNumeric())&#xA;   {&#xA;   ListOfErrors.Add(&quot;Car Price must consist of numirc value&quot;);&#xA;   }&#xA;    if(!DownPayment.IsNumeric())&#xA;   {&#xA;   ListOfErrors.Add(&quot;Down Payment must consist of numirc value&quot;);&#xA;   }&#xA;&#xA;   &#x9;if(ListOfErrors.Count&gt;0)&#xA;&#x9;{&#xA;&#x9;&#x9;throw new BusinessRuleException(string.Join(&quot; , &quot;,ListOfErrors));&#xA;&#x9;}&#xA;   &#xA;   if(Int64.Parse(DownPayment) &gt; Int64.Parse(CarPrice))&#xA;   {&#xA;   &#x9;ListOfErrors.Add(&quot;Down Payment [&quot;+DownPayment+&quot;] cannot be greater than Car Price [&quot;+CarPrice+&quot;]!&quot;);&#xA;   }&#xA;   &#xA;&#x9;if(ListOfErrors.Count&gt;0)&#xA;&#x9;{&#xA;&#x9;&#x9;throw new BusinessRuleException(string.Join(&quot; , &quot;,ListOfErrors));&#xA;&#x9;}&#xA;&#x9;#endregion&#xA;}&#xA;catch(BusinessRuleException ex)&#xA;{&#xA;&#x9;BE = ex;&#xA;}&#xA;catch(Exception ex)&#xA;{&#xA;&#x9;SE = ex;&#xA;}&#xA;&#xA;#endregion" DisplayName="Invoke code - Validate DownPayment and CarPrice" sap:VirtualizedContainerService.HintSize="388,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="CarPrice">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">in_CarPrice</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="BE">
          <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">out_BE</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="s:Exception" x:Key="SE">
          <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">out_SE</CSharpReference>
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="DownPayment">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">in_DownPaymet</CSharpValue>
        </InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>